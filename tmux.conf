# set 命令用于配置会话
# setw(set-window-option)命令用于配置窗口
#################################################
# 绑定快捷键到 Ctrl+a
#set -g prefix C-a 
# 解除默认的Ctrl+b
#unbind C-b
# 发送前缀到其他程序，按两个ctrl+a即可将前缀传到tmux里面的会话(默认的ctrl+b会默认发送)
#bind C-a send-prefix 
# 第二号指令前缀
set-option -g prefix2 ` 

# 设定前缀键与命令键之间的延时（单位秒）
set -sg escape-time 1

# 重新加载.tmux.conf文件
bind r source-file ~/.tmux.conf \; display-message "Config reloaded.."

## PREFIX s： 选择会话
## PREFIX w: 选择窗口
# 新增面板, 使用 - 上下分割，使用 | 左右分割
bind - splitw -v -c '#{pane_current_path}'
bind | splitw -h -c '#{pane_current_path}'
# 绑定hjkl键为面板切换的上下左右键
bind -r k select-pane -U # 绑定k为↑
bind -r j select-pane -D # 绑定j为↓
bind -r h select-pane -L # 绑定h为←
bind -r l select-pane -R # 绑定l为→
# 窗口之前循环切换(默认)
# PREFIX n
# PREFIX p 
# PREFIX 0~9 切换到指定窗口
# PREFIX w 打开窗口列表，可以用方向键来选择并切换窗口
# PREFIX c 新建窗口
# PREFIX & 关闭窗口
# 窗口列表从1开始编号
set -g base-index 1

# 面板大小调整
# 默认的是： PREFIX Alt+方向键，以5个单元格为单位调整当前面板边缘；
# PREFIX Control+方向键，以1个单元格为单位调整当前面板边缘
# exit 关闭panel，如果是最后一个panel，会退出窗口，如果是会话最后一个窗口，会退出会话
# 面板列表从1开始编号
set -g pane-base-index 1


# 鼠标支持: 鼠标选择文本、鼠标调整Panel边缘，鼠标选中并切换panel，鼠标点击状态栏窗口切换窗口
set-option -g mouse on 


# 终端 256 色模式显示内容
set -g default-terminal "screen-256color"
# 状态栏支持utf8
set -g status-utf8 on

# tmux 命令的配色
set -g message-fg white
set -g message-bg black
set -g message-attr bright

# 状态栏的基础本色
set -g status-fg colour190
set -g status-bg colour236

# 状态栏 窗口列表颜色
# # 不活动窗口颜色
setw -g window-status-fg colour226
setw -g window-status-bg default
setw -g window-status-attr dim 
# # 活动窗口颜色
setw -g window-status-current-fg red
setw -g window-status-current-bg default
setw -g window-status-current-attr bright

# 面板分割符配色
set -g pane-border-fg yellow
set -g pane-border-bg default
set -g pane-active-border-fg red
set -g pane-active-border-bg default

# 定制状态栏显示内容
## 左侧显示内容
set -g status-left-length 45
set -g status-left '#[fg=color230] session: #S'
## 右侧显示内容

set -g status-right "#[fg=colour230] %Y-%m-%d %H:%M | #(ifconfig | grep 'inet addr:' | cut -d: -f2 | awk '{print $1}')"

## 窗口列表剧中显示
set -g status-justify centre
## 窗口活动通知
set -g monitor-activity on
set -g visual-activity on

## 状态栏刷新频率，单位秒，如果状态栏使用了shell命令，那么这些命令也会在刷新时被执行一遍
set -g status-interval 60

# 复制模式
set-option -g history-limit 50000
## 设置使用vi模式操作缓冲区
setw -g mode-keys vi
## 按下 PREFIX [ 进入复制模式，按ENTER 退出复制模式，在复制模式下，可以使用hjkl, g, G, w,b,ctrl+f, ctrl+b等vi快捷键，浏览屏幕的输出
#
## 在复制模式下，?类似于vim的 :/ 搜索功能，输入单词后按Enter则第一个匹配的会高亮，用n和N前后跳 
## 在复制模式下，按下空格(space)键，然后移动光标，选中文本，然后按ENTER键后，
#
## 这段被选择的文件就会被复制到一个粘贴缓存区中
## 要粘贴上一步的捕捉的内容，按 PREFIX ] 
## 捕捉面板功能
## 按下PREFIX : 然后输入命令： capture-pane回车后就会捕捉整个pane，按PREFIX ]则会将上一步的内容粘贴到焦点处
#
## 显示粘贴缓存区的内容， 在终端输入： tmux show-buffer
## 保存缓存区到一个文件： tmux save-buffer
## 如： tmux capture-pane && tmux save-buffer buffer.txt或者：在命令模式下（PREFIX :）使用： capture-pane; save-buffer buffer.txt
## 再如：使用空格和ENTER选中了一些文件，然后使用 ： tmux save-buffer 1.txt保存这些内容到文件
#
## 多重粘贴缓存 
## 如果进行了多次的捕捉，那么使用： tmux list-buffers来查看都有哪些要粘贴的文件
## PREFIX ] 总是粘贴最新的文件（最上面那一行的），使用： tmux choose-buffer来选择另外的文本
## 绑定复制快捷键（与VIM同）
bind Escape copy-mode
bind -t vi-copy 'v' begin-selection
bind -t vi-copy 'y' copy-selection
# bind p paste-buffer  ## 不要这么用，因为p本来是用来选择前一个窗口的
#
## ubuntu中使用剪切板，需要安装 xclip 工具(这个功能还不知道怎么用)
bind C-c run " tmux save-buffer - | xclip -i -sel clipboard"
bind C-v run " tmx set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"
